# Simulation Parameters File

# Simulation time in minutes
simulation_time=20
# Edge devices count
min_number_of_edge_devices=30
max_number_of_edge_devices=30
edge_device_counter_size=1


# to launch simulation runs in parallel
parallel_simulation=false
# Update interval (in seconds, used for mobility) set it between 0.1 and 1 (Higher value = low simulation time. Lower value= higher accuracy).
update_interval=0.1
# Pause length between iterations (in seconds)
pause_length=1

# Display real time charts
display_real_time_charts=false
# Close charts when simulation ends 
auto_close_real_time_charts=false
# Real-time charts refresh interval
charts_update_interval=0.1
# Save charts as bitmap files
save_charts=false

# simulation area/map (meters) 
# Remember to update the edge data centers location when you change the map size (in the edge_datacenters.xml file)
length=2000
width=2000

# Network range (meters): the distance (radius) in which two devices (or a device and an edge data center) can offload to each others. 
# When a mobile device moves, if it quits this range, the task will be considered as failed due to mobility.
edge_devices_range=20
# Be carefull when setting the edge data centers coverage area when the EDGE_ONLY architecture is used, as some tasks may fail (because no resources found)
# so be sure that edge servers cover all the map, except if your scenario requires low coverage area.
edge_datacenters_coverage=800

# Enable registry 
# true : means that the device will download the application from the registry 
#       after receiving the offloaded tasks ( the container size will be used, see applications.xml file)
# false: the device will execute directly the offloaded task (no container will be downloaded           
enable_registry=false

# CLOUD = default location, you can mirror the container elsewhere programmatically by extending the defaultNetworkModel  
registry_mode=CLOUD

# When enabled, tasks will be sent to another device/server to make the offloading decisions
enable_orchestrators = true

# deploy the orchestration node (Options: CLOUD, EDGE, or MIST)
deploy_orchestrator = MIST

# Whether to stop the simulation when the time ends or wait to all the tasks to get executed.
# It is better to wait for all the tasks to get executed to get better results, however, in certain scenarios, this may takes hours.
# Disabling this may give you high tasks failure due to stopping simulation early (see the console) but it will decrease the simulation time.
wait_for_all_tasks=true

# Schedule tasks in batches to reduce the event queue size (to decrease simulation time and memory usage, default = 100)
batch_size=100

# Log settings
# Save the output at the end of simulation 
save_log_file=false
# To delete the output of previous simulations
clear_output_folder=false
# To enable deep logging
deep_log_enabled=false


# Enabling this will give more accurate results, but also will increase the simulation duration.
realistic_network_model=true      

# Network update interval in seconds ( 0.1 to 1= better accuracy but it takes longer, 2 or more = less details but faster simulation)
# Default=1 (to minimize simulation time).
network_update_interval=0.1

# If true, all data transferred to the cloud will pass through the same wan link and share the same bandwidth, 
# this can be needed in some scenarios. This also may cause many tasks to fail due to latency (depending on the WAN bandwidth). 
# When disabled, the the WAN real-time chart will not be displayed.
one_shared_wan_network = false

# Network settings   (courtesy of LEAF Simulator)
# Latency is used to determine shortest path when rooting + used to determine if tasks have failed due to high latency
# Bandwidths in megabits per seconds (Mbps)
# WAN settings   (Cloud connections)-------------------------------
wan_bandwidth = 20
wan_latency = 0.07
wan_nanojoules_per_bit = 46.7 

# MAN settings (Edge connections)-------------------------------
man_bandwidth = 1000 
man_latency = 0.035
man_nanojoules_per_bit = 0 

# LAN settings(PMU connections) -------------------------------
# WiFi settings
wifi_bandwidth = 1300
wifi_device_transmission_nanojoules_per_bit = 283.17
wifi_device_reception_nanojoules_per_bit = 137.01
wifi_access_point_transmission_nanojoules_per_bit = 23.8
wifi_access_point_reception_nanojoules_per_bit = 23.8
wifi_latency = 0.005
# Ethernet settings
ethernet_bandwidth = 1000
ethernet_nanojoules_per_bit = 40000
ethernet_latency = 0.002
# The mobile telecommunication network/ cellular settings (in this case 4g LTE)
cellular_bandwidth = 400
cellular_device_transmission_nanojoules_per_bit = 10
cellular_device_reception_nanojoules_per_bit = 10
cellular_base_station_nanojoules_per_bit_up_link = 20
cellular_base_station_nanojoules_per_bit_down_link = 100
cellular_latency = 0.008

# Task orchestration settings 
# The used architectures, use ',' for multiple values
# Options: CLOUD_ONLY,EDGE_ONLY,MIST_ONLY,MIST_AND_CLOUD,EDGE_AND_CLOUD,MIST_AND_EDGE,ALL 
orchestration_architectures = ALL

# The orchestration algorithm, use ',' for multiple values  TRADE_OFF,ROUND_ROBIN
orchestration_algorithms = TRADE_OFF
#TRADE_OFF,ROUND_ROBIN,PMU_SENSOR_GRID_ORCHESTRATION,PMU_BATCH_ORCHESTRATOR

# PMU Network Jitter Configuration (in milliseconds)
# Jitter adds realistic network variation to latency measurements
cellular_jitter_ms = 5
man_jitter_ms = 4  
wan_jitter_ms = 8
enable_network_jitter = true

# Random seed for PMU placement reproducibility
# Set to any integer for reproducible simulations, or -1 for truly random placement
pmu_placement_seed = 100